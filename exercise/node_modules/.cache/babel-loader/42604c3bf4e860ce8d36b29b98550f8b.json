{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eric Romero\\\\Documents\\\\GitHub\\\\rehab-x\\\\exercise\\\\src\\\\components\\\\VideoSelector.js\";\nimport * as _videosSquatsLungesMov from \"../videos/squats-lunges.mov\";\nimport * as _videosSquatsMov from \"../videos/squats.mov\";\nimport React, { useState, useRef } from 'react';\nimport { toPairs } from 'lodash';\nimport Video from './Video';\nimport { loadPoseData, usePoseDetection, useRepsCounter, mediaSize } from './poseUtils';\nvar videoFiles = toPairs({\n  \"../videos/squats-lunges.mov\": _videosSquatsLungesMov,\n  \"../videos/squats.mov\": _videosSquatsMov\n});\n\nfunction MediaPose(_ref) {\n  var src = _ref.src,\n      poseData = _ref.poseData;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      play = _useState2[0],\n      setPlay = _useState2[1];\n\n  var canvasRef = useRef(null);\n  var videoRef = useRef(null);\n  var pose = usePoseDetection(play, poseData.net, videoRef.current, canvasRef.current);\n  var reps = useRepsCounter(pose, poseData.vptree);\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      position: 'absolute',\n      color: '#AF1F24',\n      fontWeight: 'bold',\n      fontSize: 68,\n      width: 100,\n      height: 100,\n      backgroundColor: '#ffffff90',\n      wordWrap: 'break-word',\n      whiteSpace: 'pre-line',\n      top: '0%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, reps), React.createElement(\"canvas\", {\n    width: mediaSize,\n    height: mediaSize,\n    ref: canvasRef,\n    style: {\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Video, {\n    width: mediaSize,\n    height: mediaSize,\n    src: src,\n    play: play,\n    videoRef: videoRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    style: {\n      height: 40,\n      width: 100,\n      margin: 'auto'\n    },\n    onClick: function onClick() {\n      return setPlay(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"START\"));\n}\n\nvar Images = /*#__PURE__*/function (_React$Component) {\n  _inherits(Images, _React$Component);\n\n  function Images() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Images);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Images)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loadedPoses: false,\n      src: videoFiles[0][1]\n    };\n    _this.setup = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return loadPoseData();\n\n            case 2:\n              _this.poseData = _context.sent;\n              console.log('LOADED ALL POSES!!!');\n\n              _this.setState({\n                loadedPoses: true\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Images, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.setup();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          loadedPoses = _this$state.loadedPoses,\n          src = _this$state.src;\n      return loadedPoses && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MediaPose, {\n        key: src,\n        src: src,\n        poseData: this.poseData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        defaultValue: src,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            src: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Camera\"), videoFiles.map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            filename = _ref4[0],\n            path = _ref4[1];\n\n        return React.createElement(\"option\", {\n          key: path,\n          value: path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, filename);\n      })));\n    }\n  }]);\n\n  return Images;\n}(React.Component);\n\nexport default Images;","map":{"version":3,"sources":["C:/Users/Eric Romero/Documents/GitHub/rehab-x/exercise/src/components/VideoSelector.js"],"names":["React","useState","useRef","toPairs","Video","loadPoseData","usePoseDetection","useRepsCounter","mediaSize","videoFiles","MediaPose","src","poseData","play","setPlay","canvasRef","videoRef","pose","net","current","reps","vptree","display","flexDirection","position","color","fontWeight","fontSize","width","height","backgroundColor","wordWrap","whiteSpace","top","margin","Images","state","loadedPoses","setup","console","log","setState","e","target","value","map","filename","path","Component"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { toPairs } from 'lodash';\r\nimport importAll from 'import-all.macro';\r\n\r\nimport Video from './Video';\r\nimport {\r\n  loadPoseData,\r\n  usePoseDetection,\r\n  useRepsCounter,\r\n  mediaSize,\r\n} from './poseUtils';\r\n\r\nconst videoFiles = toPairs(importAll.sync('../videos/**/*.mov'));\r\n\r\nfunction MediaPose({ src, poseData }) {\r\n  const [play, setPlay] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n\r\n  const pose = usePoseDetection(\r\n    play,\r\n    poseData.net,\r\n    videoRef.current,\r\n    canvasRef.current\r\n  );\r\n  const reps = useRepsCounter(pose, poseData.vptree);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <div>\r\n        <span\r\n          style={{\r\n            position: 'absolute',\r\n            color: '#AF1F24',\r\n            fontWeight: 'bold',\r\n            fontSize: 68,\r\n            width: 100,\r\n            height: 100,\r\n            backgroundColor: '#ffffff90',\r\n            wordWrap: 'break-word',\r\n            whiteSpace: 'pre-line',\r\n            top: '0%',\r\n          }}\r\n        >\r\n          {reps}\r\n        </span>\r\n        <canvas\r\n          width={mediaSize}\r\n          height={mediaSize}\r\n          ref={canvasRef}\r\n          style={{ position: 'absolute' }}\r\n        />\r\n        <Video\r\n          width={mediaSize}\r\n          height={mediaSize}\r\n          src={src}\r\n          play={play}\r\n          videoRef={videoRef}\r\n        />\r\n      </div>\r\n      <button\r\n        style={{ height: 40, width: 100, margin: 'auto' }}\r\n        onClick={() => setPlay(true)}\r\n      >\r\n        START\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Images extends React.Component {\r\n  state = {\r\n    loadedPoses: false,\r\n    src: videoFiles[0][1],\r\n  };\r\n\r\n  setup = async () => {\r\n    this.poseData = await loadPoseData();\r\n    console.log('LOADED ALL POSES!!!');\r\n    this.setState({ loadedPoses: true });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.setup();\r\n  }\r\n\r\n  render() {\r\n    const { loadedPoses, src } = this.state;\r\n    return (\r\n      loadedPoses && (\r\n        <div>\r\n          <MediaPose key={src} src={src} poseData={this.poseData} />\r\n\r\n          <select\r\n            defaultValue={src}\r\n            onChange={e => this.setState({ src: e.target.value })}\r\n          >\r\n            <option value=\"camera\">Camera</option>\r\n            {videoFiles.map(([filename, path]) => (\r\n              <option key={path} value={path}>\r\n                {filename}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n"]},"metadata":{},"sourceType":"module"}