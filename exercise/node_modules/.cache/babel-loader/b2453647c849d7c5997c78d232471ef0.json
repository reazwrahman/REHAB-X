{"ast":null,"code":"'use strict'; // MODULES //\n\nvar isArray = require('validate.io-array'),\n    isFunction = require('validate.io-function'); // DOT PRODUCT //\n\n/**\n* FUNCTION: dot( x, y[, accessor] )\n*\tComputes the dot product between two arrays.\n*\n* @param {Array} x - input array\n* @param {Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} dot product\n*/\n\n\nfunction dot(x, y, clbk) {\n  if (!isArray(x)) {\n    throw new TypeError('dot()::invalid input argument. First argument must be an array. Value: `' + x + '`.');\n  }\n\n  if (!isArray(y)) {\n    throw new TypeError('dot()::invalid input argument. Second argument must be an array. Value: `' + y + '`.');\n  }\n\n  if (arguments.length > 2) {\n    if (!isFunction(clbk)) {\n      throw new TypeError('dot()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.');\n    }\n  }\n\n  var len = x.length,\n      sum = 0,\n      i;\n\n  if (len !== y.length) {\n    throw new Error('dot()::invalid input argument. Arrays must be of equal length.');\n  }\n\n  if (!len) {\n    return null;\n  }\n\n  if (clbk) {\n    for (i = 0; i < len; i++) {\n      sum += clbk(x[i], i, 0) * clbk(y[i], i, 1);\n    }\n  } else {\n    for (i = 0; i < len; i++) {\n      sum += x[i] * y[i];\n    }\n  }\n\n  return sum;\n} // end FUNCTION dot()\n// EXPORTS //\n\n\nmodule.exports = dot;","map":null,"metadata":{},"sourceType":"script"}